upstream elasticsearch {
  server <ES_HOST>:<ES_PORT>;
}

upstream backend {
  server <BACKEND_HOST>:<BACKEND_PORT>;
}

upstream frontend-dev {
  server <FRONTEND_DEV_HOST>:<FRONTEND_DEV_PORT>;
}

server {
  listen 80 default_server;
  include tor-ip.conf;
  include aws-ip.conf;

  #don't send the nginx version number in error pages and Server header
  server_tokens off;

  # enabling HSTS(HTTP Strict Transport Security)
  # https://developer.mozilla.org/en-US/docs/Web/Security/HTTP_strict_transport_security
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

  # frontend (dev, npm server)
  location / {
    try_files $uri @rew;
  }

  location @rew {
    return 302 $scheme://$http_host/<APP>/;
  }

  location ~ (__webpack_hmr|sockjs-node|app.js|^/static|.*hot-update.(js|json)) {
  	proxy_pass http://frontend-dev;
      # Allow protocol upgrade to websocket
      proxy_http_version 1.1;
      proxy_next_upstream off;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }

  location /<APP> {
    proxy_pass http://frontend-dev;
  }

  location /<APP>/assets/images {
    alias /usr/share/nginx/html/assets/images;
  }

  location ~ "^/<APP>/api/v1/log/exit" {
    if ($request_method != POST) {
       return 405;
    }
    default_type application/json;
    return 200 '{"status":"ok"}';
  }

  location ~ "^/<APP>/api/v1/log/.*" {
    if ($request_method != PUT) {
       return 405;
    }
    default_type application/json;
    return 200 '{"status":"ok"}';
  }

  location ~ "^/<APP>/api/v1/(report|contact)" {
    if ($request_method != POST) {
       return 405;
    }
    proxy_pass http://backend;
    proxy_http_version 1.1;
    proxy_next_upstream off;
    proxy_set_header Host $http_host;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }

}
